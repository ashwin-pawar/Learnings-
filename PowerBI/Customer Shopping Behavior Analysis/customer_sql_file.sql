DROP TABLE IF EXISTS customer
CREATE TABLE customer(
    customer_id VARCHAR(20) PRIMARY KEY,
    age INT,
    gender VARCHAR(10),
    item_purchased VARCHAR(100),
    category VARCHAR(50),
    purchase_amount_usd DECIMAL(10,2),
    location VARCHAR(100),
    size VARCHAR(10),
    color VARCHAR(30),
    season VARCHAR(20),
    review_rating DECIMAL(3,1),
    subscription_status VARCHAR(20),
    shipping_type VARCHAR(20),
    discount_applied VARCHAR(20),
    promo_code_used VARCHAR(50),
    previous_purchases INT,
    payment_method VARCHAR(30),
    frequency_of_purchases INT
);




/*

Q1. What is the total revenue generated by male vs. female customers?


--Q2. Which customers used a discount but still spent more than the average purchase
amount ?
--Q3. Which are the top S products with the highest average review rating? 1
--Q4. Compare the average Purchase Amounts between Standard and Express Shipping.
--Q5. Do subscribed customers spend more? Compare average spend and total revenue between
subscribers and non-subscribers.
--Q6. Which 5 products have the highest percentage of purchases with discounts applied?'
--Q7. Segment customers into New, Returning, and Loyal based on their total number of J
previous purchases, and show the count of each segment.
--Q8. What are the top 3 most purchased products within each category? I
--Q9. Are customers who are repeat buyers (more than 5 previous purchases) also likely to'
subscribe?
QlÃ¸.- What is the revenue contribution of each age group?
*/


-- Q1. What is the total revenue generated by male vs. female customers?


SELECT gender,
	   SUM(purchase_amount_usd) AS revenue       -- mostly yhi pucha jata hai 
FROM customer							-- help campign team to target aduience 
GROUP BY gender

-- --Q2. Which customers used a discount but still spent more than the average purchase amount ?


SELECT customer_id,
	   purchase_amount_usd   
FROM customer 
WHERE discount_applied = 'Yes'  AND purchase_amount_usd >= ( SELECT AVG(purchase_amount_usd) FROM customer)

SELECT * FROM customer

--Q3. Which are the top 5 products with the highest average review rating? 


SELECT item_purchased,
	   ROUND(AVG(review_rating),2) AS avg_product_rating
FROM customer
GROUP BY 1
ORDER BY 2 DESC LIMIT 5 -- ye jo product hai ye hightlted hai team inko high (premium price) margin par bhec saktii hai 


--Q4. Compare the average Purchase Amounts between Standard and Express Shipping.

SELECT shipping_type,
	   ROUND(AVG(purchase_amount_usd),2) AS avg_purchas_amount
FROM customer
WHERE shipping_type IN ('Standard' , 'Express' )
GROUP BY 1

SELECT * FROM customer

--Q5. Do subscribed customers spend more? Compare average spend and total revenue between subscribers and non-subscribers.

SELECT subscription_status,
	   COUNT(customer_id) AS total_customer,
	   ROUND(AVG(purchase_amount_usd),2) AS avg_purchas_amount,
	   SUM(purchase_amount_usd) AS total_revenue
FROM customer
GROUP BY 1

--Q6. Which 5 products have the highest percentage of purchases with discounts applied?'

-- hm ye dekh rhe hai ki konse products ase hai jo hevily relly kr rhe hai on discount or sell - dusring sell or discount applied konse product hai top 5


SELECT item_purchased,
ROUND(100 * SUM(CASE WHEN discount_applied = 'Yes' THEN 1 ELSE 0 END)/ COUNT(*),2) AS Discount_Rate
FROM customer 
GROUP BY 1
ORDER BY 2  DESC LIMIT 5

-- pehle CASE WHEN ka use krke discount applied wale product ko nikala then SUM kia un sb product ka then / by total transcion yes and no k
-- then % me convert krne k liye * 100 lia mltb discount_applied/total(yes/no) trancation * 100 piche values ni aa rhe they toh aage likha bs


--Q7. Segment customers into New, Returning, and Loyal based on their total number of previous purchases, and show the count of each segment.

-- busineess love the customer segmentations kyuki es se unko loyal new customer dekhne milta hai kon kon hai and it help them to undestand customer loyalty

SELECT * FROM customer
	   
WITH customer_type
AS
(
SELECT	previous_purchases,
		customer_id,
CASE
		WHEN previous_purchases = 1 THEN 'New'
		WHEN previous_purchases BETWEEN 2 AND 10 THEN 'Returning'	
		ELSE 'Loyal'
		END AS customer_segment
FROM customer
	   -- now see hmne code likh dia jaha pe hamne group kia but count ni kr skte toh CTE use krna padega so
)

SELECT customer_segment,
COUNT(*) AS  "Number_of_customers"
FROM customer_type
GROUP BY 1

-- IN THIS i learn when then end else kese kam krta hai kese uwe krte hai just like if when then then end krna ho tb end likho bs

--Q8. What are the top 3 most purchased products within each category?
SELECT * FROM customer
WITH Product_rank AS
(   SELECT 
			category,	
			item_purchased AS Product, 
	   	    COUNT(customer_id) AS total_orders,
			   -- window funtion
			ROW_NUMBER() OVER(PARTITION BY category ORDER BY COUNT (customer_id) DESC ) AS item_rank
	FROM customer	
	GROUP BY 1,2

-- we get rank of each product in diff category along with total orders (customer_id) 
-- now cte coz hame top 3rank hi chaiye on each category
)

SELECT category, product, total_orders, item_rank
FROM Product_rank
WHERE item_rank <= 3

-- MY MISTAKE- i thought top 3 dikhna hai toh limit 3 lagate hai but wo glt tha us se bs jo top 3 product rehte wahi dikhta 
-- but hae toh sare category k show krna hai toh wo hata dena padega item_rank <=3 sare item jo rank 3 ya us se niche k hai dikhega

-- why we use row no insted of rank and dense rank --> coz they both will put same rank to same number of total_items

--Q9. Are customers who are repeat buyers (more than 5 previous purchases) also likely to subscribe?

SELECT subscription_status,
COUNT(customer_id) AS Repeat_buyers
FROM customer
WHERE previous_purchases > 5
GROUP BY 1

-- Q10.- What is the revenue contribution of each age group?
SELECT * FROM customer


SELECT age, -- just because i forgot the password of jupyter notebook i take age else i haven taked age_group col
	   SUM(purchase_amount_usd) AS Total_revenue
FROM customer
GROUP BY 1
ORDER BY 2 DESC

